{% extends 'base.html.twig' %}

{% block title %}Editer une publication{% endblock %}

{% block body %}
<div class="d-flex justify-content-end position-fixed top-0 end-0 m-3">
    <a href="{{ app.request.headers.get('referer') }}">
        <img class="icon-page-precedente" src="{{ asset('assets/images/page_precedente.png') }}" alt="IcÃ´ne non trouvÃ©."></img>
    </a>
</div>

{{ form_start(form) }}
<div style="" class="p-2">

    {% if publication.photos|length > 0 %}
    {{ publication.photos[0].cheminFichierImage }}
    <div id="photo-{{ publication.photos[0].id }}">
        <img src="{{ path('serve_image', { filename: publication.photos[0].cheminFichierImage }) }}" alt="Image" width="150">
        <p>{{ publication.photos[0].legende }}</p>
        <button
        type="button"
        class="btn btn-danger btn-delete-photo"
        data-id="{{ publication.photos[0].id }}"
        data-token="{{ csrf_token('delete-photo-' ~ publication.photos[0].id) }}">
        ðŸ—‘ Supprimer
        </button>
    </div>
    {% endif %}

    {{ form_row( form.titre ) }}
    {{ form_row( form.contenu ) }}

    <div id="formPhoto" style="display: block;">
        {{ form_row( form.legende ) }}
        {{ form_row( form.photo ) }}
    </div>

    {{ form_row( form.submit ) }}
    <a href="{{ path('app_afficher_fac') }}" class="btn btn-outline-light btn-sm mt-3">Annuler</a>

</div>
{{ form_end(form) }}

{% if publication.photos|length > 0 %}
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header bg-danger text-white">
        <h5 class="modal-title" id="confirmDeleteLabel">Confirmer la suppression</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
      </div>
      <div class="modal-body">
        Voulez-vous vraiment supprimer cette photo ? Cette action est irrÃ©versible.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
        <button type="button" class="btn btn-danger" id="modal-confirm-delete">Supprimer</button>
      </div>
    </div>
  </div>
</div>
{% endif %}

{% if publication.photos|length > 0 %}
<script>
    document.getElementById('formPhoto').style.display = "none";

    const deleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal'));

    let deletePhotoId = null;
    let deletePhotoToken = null;

    document.querySelectorAll('.btn-delete-photo').forEach(button => {
        button.addEventListener('click', function () {
            deletePhotoId = this.dataset.id;
            deletePhotoToken = this.dataset.token;
            deleteModal.show(); // Ouvrir le modal Bootstrap
        });
    });

    document.getElementById('modal-confirm-delete').addEventListener('click', function () {
        if (!deletePhotoId || !deletePhotoToken) return;

        fetch(`/photo/delete/${deletePhotoId}`, {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest',
                'X-CSRF-TOKEN': deletePhotoToken
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const photoElement = document.getElementById(`photo-${deletePhotoId}`);
                if (photoElement) {
                    setTimeout(() => photoElement.remove(), 500); // attendre la fin de l'animation
                }

                const formElement = document.querySelector(`.photo-form[data-photo-id="${deletePhotoId}"]`);
                if (formElement) {
                    setTimeout(() => formElement.remove(), 500);
                }

                document.getElementById('formPhoto').style.display = "block";
            } else {
                alert(data.error || 'Erreur lors de la suppression.');
            }

            deleteModal.hide();
            deletePhotoId = null;
            deletePhotoToken = null;
        })
        .catch(() => {
            alert('Une erreur est survenue.');
            deleteModal.hide();
            deletePhotoId = null;
            deletePhotoToken = null;
        });
    });
</script>
{% endif %}

{% endblock %}